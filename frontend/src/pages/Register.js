import React, { useState } from 'react';
import { useNavigate } from 'react-router-dom';
import './Auth.css';

const advantagesWithIcons = [
  { icon: 'üí∞', text: '‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡∏à‡πâ‡∏≤‡∏á' },
  { icon: 'üìÑ', text: '‡∏°‡∏µ‡πÉ‡∏ö‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö‡∏ß‡∏¥‡∏ä‡∏≤‡∏ä‡∏µ‡∏û' },
  { icon: 'üîÑ', text: '‡∏ú‡∏¥‡∏î‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç ‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏Ñ‡∏∑‡∏ô‡πÄ‡∏á‡∏¥‡∏ô' },
  { icon: 'üó®Ô∏è', text: '‡πÉ‡∏´‡πâ‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏ï‡∏•‡∏≠‡∏î‡∏Å‡∏≤‡∏£‡∏à‡πâ‡∏≤‡∏á' },
  { icon: '‚úÖ', text: '‡∏ü‡∏£‡∏µ‡πÅ‡∏•‡∏ô‡∏ã‡πå‡∏ú‡πà‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö' }
];

const Register = () => {
  const navigate = useNavigate();
  const [form, setForm] = useState({ username: '', email: '', password: '', confirmPassword: '', name: '', phone: '' });
  const [usePhone, setUsePhone] = useState(false);
  const [otpSent, setOtpSent] = useState(false);
  const [otpCode, setOtpCode] = useState('');
  const [verifiedPhone, setVerifiedPhone] = useState('');
  const [error, setError] = useState('');
  const [wantsOffers, setWantsOffers] = useState(true);

  const handleChange = e => setForm({ ...form, [e.target.name]: e.target.value });

  const handleSubmit = async (e) => {
  e.preventDefault();
  setError('');

  if (form.password !== form.confirmPassword) {
    setError('‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÑ‡∏°‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ô');
    return;
  }
  if (usePhone && !verifiedPhone) {
    setError('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå‡∏î‡πâ‡∏ß‡∏¢ OTP ‡∏Å‡πà‡∏≠‡∏ô‡∏™‡∏°‡∏±‡∏Ñ‡∏£');
    return;
  }

  try {
    const payload = {
      username: form.username,
      password: form.password,
      name: form.name || null,
      email: usePhone ? null : form.email || null,
      phone: usePhone ? form.phone : null
    };

    const res = await fetch('http://localhost:5000/api/register', {
      method: 'POST',
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify(payload)
    });

    const data = await res.json();

    if (data.success) {
      alert(data.message || '‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');
      navigate('/login');
    } else {
      setError(data.message || '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÑ‡∏°‡πà‡∏ó‡∏£‡∏≤‡∏ö‡∏™‡∏≤‡πÄ‡∏´‡∏ï‡∏∏');
    }
  } catch (err) {
    console.error('Register fetch error:', err);
    setError('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå');
  }
};


  const handleSendOtp = async () => {
    setError('');
    if (!form.phone) return setError('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏∞‡∏ö‡∏∏‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå');
    try {
      const res = await fetch('/api/otp/send', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ phone: form.phone })
      });
      const data = await res.json();
      if (res.ok && data.success) {
        setOtpSent(true);
        if (data.code) alert('OTP (dev): ' + data.code);
      } else setError(data.message || `‡∏™‡πà‡∏á OTP ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß (status ${res.status})`);
    } catch { setError('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á OTP'); }
  };

  const handleVerifyOtp = async () => {
    setError('');
    if (!form.phone || !otpCode) return setError('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡πÅ‡∏•‡∏∞‡∏£‡∏´‡∏±‡∏™ OTP');
    try {
      const res = await fetch('/api/otp/verify', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ phone: form.phone, code: otpCode })
      });
      const data = await res.json();
      if (res.ok && data.success) {
        setVerifiedPhone(form.phone);
        alert('‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢');
      } else setError(data.message || `‡∏Å‡∏≤‡∏£‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß (status ${res.status})`);
    } catch { setError('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô OTP'); }
  };

  return (
    <div style={{ display: 'flex', justifyContent: 'center', padding: 24, minHeight: '100vh', background: '#f9fafb' }}>
      <div className="auth-card">
        <div className="auth-left">
          <img src="/logo192.png" alt="logo" style={{ width: 120, display: 'block', margin: '0 auto' }} />
          <h3 style={{ color: '#07203a', textAlign: 'center', marginTop: 8 }}>‡∏Ç‡πâ‡∏≠‡∏î‡∏µ‡∏Ç‡∏≠‡∏á‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏≤</h3>
          <div className="advantages">
            {advantagesWithIcons.map((adv, i) => (
              <div key={i} className="adv-item">
                <div className="adv-icon">{adv.icon}</div>
                <div style={{ fontWeight: 600 }}>{adv.text}</div>
              </div>
            ))}
          </div>

          {/* vehicle-interest removed as requested */}
        </div>

        <div className="auth-right">
          <h2 style={{ color: '#07203a', marginBottom: 12, textAlign: 'center' }}>‡πÅ‡∏ö‡∏ö‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å</h2>
          {error && <div style={{ background: '#fff1f2', color: '#991b1b', padding: 10, borderRadius: 8, marginBottom: 12 }}>{error}</div>}

          <form onSubmit={handleSubmit} style={{ display: 'grid', gap: 12 }}>
            <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>
              <strong>‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏î‡πâ‡∏ß‡∏¢ {usePhone ? '‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå' : '‡∏≠‡∏µ‡πÄ‡∏°‡∏•'}</strong>
              <button type="button" onClick={() => setUsePhone(p => !p)} style={{ background: 'transparent', border: 'none', color: '#4f46e5', cursor: 'pointer' }}>
                {usePhone ? '‡πÉ‡∏ä‡πâ‡πÅ‡∏ö‡∏ö‡∏≠‡∏µ‡πÄ‡∏°‡∏•' : '‡πÉ‡∏ä‡πâ‡πÅ‡∏ö‡∏ö‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£'}
              </button>
            </div>

            <input name="username" className="nice-input" placeholder="‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ / Username" value={form.username} onChange={handleChange} required />
            {!usePhone && <input name="email" className="nice-input" type="email" placeholder="‡∏≠‡∏µ‡πÄ‡∏°‡∏• / Email" value={form.email} onChange={handleChange} required />}
            <input name="name" className="nice-input" placeholder="‡∏ä‡∏∑‡πà‡∏≠-‡∏™‡∏Å‡∏∏‡∏• (‡πÑ‡∏°‡πà‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö)" value={form.name} onChange={handleChange} />
            <div style={{ display: 'flex', gap: 8 }}>
              <input name="phone" className="nice-input" placeholder="‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå" value={form.phone} onChange={handleChange} required={usePhone} />
              {usePhone && (
                !otpSent ? 
                  <button type="button" onClick={handleSendOtp} className="btn-primary">‡∏™‡πà‡∏á OTP</button> :
                  <>
                    <input placeholder="‡∏£‡∏´‡∏±‡∏™ OTP" value={otpCode} onChange={e => setOtpCode(e.target.value)} />
                    <button type="button" onClick={handleVerifyOtp} className="btn-primary">‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô OTP</button>
                  </>
              )}
            </div>
            <input name="password" className="nice-input" type="password" placeholder="‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô" value={form.password} onChange={handleChange} required />
            <input name="confirmPassword" className="nice-input" type="password" placeholder="‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô" value={form.confirmPassword} onChange={handleChange} required />

            <label style={{ display: 'flex', alignItems: 'center', gap: 8 }}>
              <div role="button" tabIndex={0} className={`toggle-circle ${wantsOffers ? 'on' : ''}`} onClick={() => setWantsOffers(v => !v)} onKeyDown={() => setWantsOffers(v => !v)}>{wantsOffers ? '‚úì' : ''}</div>
              <div>‡∏ï‡∏Å‡∏•‡∏á‡∏£‡∏±‡∏ö‡∏Ç‡πà‡∏≤‡∏ß‡∏™‡∏≤‡∏£‡πÅ‡∏•‡∏∞‡∏Ç‡πâ‡∏≠‡πÄ‡∏™‡∏ô‡∏≠‡∏û‡∏¥‡πÄ‡∏®‡∏©</div>
            </label>

            <button type="submit" className="btn-primary" style={{ width: '100%', padding: 12, borderRadius: 8, fontWeight: 700 }}>‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å</button>
          </form>

          <div style={{ marginTop: 16, width: '100%' }}>
            <p style={{ color: '#6b7280', marginBottom: 12, textAlign: 'center' }}>‡∏´‡∏£‡∏∑‡∏≠‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏î‡πâ‡∏ß‡∏¢</p>
            <button className="social-btn" style={{ marginBottom: 10 }} onClick={() => alert('‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏î‡πâ‡∏ß‡∏¢‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå (OTP)')}>üìû ‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå</button>
            <button className="social-btn" style={{ marginBottom: 10 }} onClick={() => alert('‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏î‡πâ‡∏ß‡∏¢ Facebook')}>üîµ Facebook</button>
            <button className="social-btn" onClick={() => alert('‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏î‡πâ‡∏ß‡∏¢ Google')}>üü¢ Google</button>
          </div>

          <div style={{ textAlign: 'center', marginTop: 12 }}>‡∏°‡∏µ‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡πÅ‡∏•‡πâ‡∏ß? <a href="/login" className="small-link">‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö</a></div>
        </div>
      </div>
    </div>
  );
};

export default Register;
