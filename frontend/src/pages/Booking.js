import React, { useState, useEffect } from 'react';
import { useLocation, useNavigate } from 'react-router-dom';
import './Booking.css'; // ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏° CSS ‡∏†‡∏≤‡∏¢‡∏ô‡∏≠‡∏Å

const Booking = () => {
  const { state } = useLocation();
  const navigate = useNavigate();
  const preCar = state?.car || null;

  const [form, setForm] = useState({
    car: preCar ? preCar.name : '',
    pickupDate: '',
    dropoffDate: '',
    name: '',
    phone: ''
  });
  const [acceptTerms, setAcceptTerms] = useState(false);

  const pickup = form.pickupDate ? new Date(form.pickupDate) : null;
  const dropoff = form.dropoffDate ? new Date(form.dropoffDate) : null;
  const durationDays =
    pickup && dropoff && dropoff > pickup
      ? Math.ceil((dropoff - pickup) / (1000 * 60 * 60 * 24))
      : 0;
  const totalPrice = preCar?.price * durationDays || 0;

  useEffect(() => {
    if (preCar) setForm(f => ({ ...f, car: preCar.name }));
  }, [preCar]);

  const handleChange = e => setForm({ ...form, [e.target.name]: e.target.value });

  const handleSubmit = e => {
    e.preventDefault();
    if (!acceptTerms) return alert('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏¢‡∏≠‡∏°‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Å‡πà‡∏≠‡∏ô‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£');
    if (!form.pickupDate || !form.dropoffDate || durationDays <= 0)
      return alert('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ä‡πà‡∏ß‡∏á‡∏ß‡∏±‡∏ô‡∏£‡∏±‡∏ö‡πÅ‡∏•‡∏∞‡∏ß‡∏±‡∏ô‡∏Ñ‡∏∑‡∏ô‡∏£‡∏ñ‡πÉ‡∏´‡πâ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á');

    try {
      const bookingData = {
        ...form,
        carId: preCar?.id || null,
        duration: `${form.pickupDate} ‡∏ñ‡∏∂‡∏á ${form.dropoffDate} (${durationDays} ‡∏ß‡∏±‡∏ô)`,
        total: totalPrice,
        createdAt: new Date().toISOString()
      };
      delete bookingData.pickupDate;
      delete bookingData.dropoffDate;

      const bookings = JSON.parse(localStorage.getItem('bookings') || '[]');
      bookings.push(bookingData);
      localStorage.setItem('bookings', JSON.stringify(bookings));

      if (preCar?.id) {
        const map = JSON.parse(localStorage.getItem('cars_availability') || '{}');
        map[preCar.id] = false;
        localStorage.setItem('cars_availability', JSON.stringify(map));
      }

      alert('‚úÖ ‡∏à‡∏≠‡∏á‡∏£‡∏ñ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!');
      navigate('/carlist');
    } catch (err) {
      console.error('Booking failed:', err);
      alert('‚ö†Ô∏è ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•');
    }
  };

  return (
    <div className="booking-page">
      <h2 className="booking-title">üìù ‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏£‡∏ñ</h2>

      <div className="booking-layout">
        {/* ‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏ù‡∏±‡πà‡∏á‡∏ã‡πâ‡∏≤‡∏¢ */}
        <form className="booking-form" onSubmit={handleSubmit}>
          <h3 className="section-title">‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏ä‡πà‡∏≤ üóìÔ∏è</h3>

          <div className="date-group">
            <div className="date-item">
              <label>‡∏ß‡∏±‡∏ô‡∏£‡∏±‡∏ö‡∏£‡∏ñ</label>
              <input type="date" name="pickupDate" value={form.pickupDate} onChange={handleChange} />
            </div>
            <div className="date-item">
              <label>‡∏ß‡∏±‡∏ô‡∏Ñ‡∏∑‡∏ô‡∏£‡∏ñ</label>
              <input type="date" name="dropoffDate" value={form.dropoffDate} onChange={handleChange} />
            </div>
          </div>

          <div className="duration-text">
            {durationDays > 0 ? `üëâ ‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏ä‡πà‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î: ${durationDays} ‡∏ß‡∏±‡∏ô` : '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ß‡∏±‡∏ô‡∏£‡∏±‡∏ö‡πÅ‡∏•‡∏∞‡∏ß‡∏±‡∏ô‡∏Ñ‡∏∑‡∏ô‡∏£‡∏ñ'}
          </div>

          <h3 className="section-title">‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠ üìû</h3>

          <div className="form-grid">
            <div className="form-group full">
              <label>‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡∏à‡∏≠‡∏á</label>
              <input type="text" name="name" value={form.name} onChange={handleChange} placeholder="‡∏™‡∏°‡∏ä‡∏≤‡∏¢ ‡πÉ‡∏à‡∏î‡∏µ" required />
            </div>
            <div className="form-group">
              <label>‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£</label>
              <input type="text" name="phone" value={form.phone} onChange={handleChange} placeholder="08X-XXXXXXX" required />
            </div>
            <div className="form-group">
              <label>‡∏ä‡∏∑‡πà‡∏≠‡∏£‡∏ñ</label>
              <input type="text" name="car" value={form.car} disabled={!!preCar} onChange={handleChange} />
            </div>
          </div>

          <label className="terms">
            <input type="checkbox" checked={acceptTerms} onChange={e => setAcceptTerms(e.target.checked)} />
            ‡∏â‡∏±‡∏ô‡∏¢‡∏≠‡∏°‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÅ‡∏•‡∏∞‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç
          </label>

          <button type="submit" className={`submit-btn ${acceptTerms ? '' : 'disabled'}`} disabled={!acceptTerms}>
            üí∏ ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡πÅ‡∏•‡∏∞‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô
          </button>
        </form>

        {/* Summary ‡∏î‡πâ‡∏≤‡∏ô‡∏Ç‡∏ß‡∏≤ */}
        {preCar && (
          <div className="summary-card">
            <img src={preCar.image} alt={preCar.name} />
            <h4>{preCar.name}</h4>
            <p>‡∏£‡∏≤‡∏Ñ‡∏≤: {preCar.price.toLocaleString()} ‡∏ø / ‡∏ß‡∏±‡∏ô</p>
            {durationDays > 0 && (
              <>
                <hr />
                <p>‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ß‡∏±‡∏ô: {durationDays} ‡∏ß‡∏±‡∏ô</p>
                <strong>‡∏£‡∏≤‡∏Ñ‡∏≤‡∏£‡∏ß‡∏°: {totalPrice.toLocaleString()} ‡∏ø</strong>
              </>
            )}
          </div>
        )}
      </div>
    </div>
  );
};

export default Booking;
