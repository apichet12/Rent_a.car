// components/NavbarLogin.js
import React, { useContext, useState, useEffect } from 'react';
import { Link, useNavigate, useLocation } from 'react-router-dom';
import { AuthContext } from '../contexts/AuthContext';
import './Navbar.css';

const PLACEHOLDERS = [
  "‡∏≠‡∏≠‡∏Å‡πÅ‡∏ö‡∏ö‡πÇ‡∏•‡πÇ‡∏Å‡πâ‡∏£‡πâ‡∏≤‡∏ô‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡πÑ‡∏´‡∏ô‡∏î‡∏µ...",
  "‡πÄ‡∏õ‡∏£‡∏µ‡∏¢‡∏ö‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö‡∏£‡∏≤‡∏Ñ‡∏≤‡πÄ‡∏ä‡πà‡∏≤‡∏£‡∏ñ‡∏¢‡∏ô‡∏ï‡πå SUV 7 ‡∏ó‡∏µ‡πà‡∏ô‡∏±‡πà‡∏á...",
  "‡∏´‡∏≤‡∏ß‡∏¥‡∏ò‡∏µ‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏û‡∏¥‡πÄ‡∏®‡∏©‡∏Ñ‡∏ì‡∏¥‡∏ï‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö ‡∏°.‡∏õ‡∏•‡∏≤‡∏¢...",
  "‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡πà‡∏≤‡∏°‡∏≠‡πÄ‡∏ï‡∏≠‡∏£‡πå‡πÑ‡∏ã‡∏Ñ‡πå...",
  "‡∏ï‡∏¥‡∏ß‡∏™‡∏≠‡∏ö‡πÄ‡∏Ç‡πâ‡∏≤‡∏°‡∏´‡∏≤‡∏•‡∏±‡∏¢...",
];
const TYPING_SPEED = 100;
const DELETING_SPEED = 50;
const PAUSE_DURATION = 1500;

const NavbarLogin = () => {
  const { user, logout } = useContext(AuthContext);
  const [query, setQuery] = useState('');
  const [showFullNav, setShowFullNav] = useState(false);
  const navigate = useNavigate();
  const location = useLocation();

  const [placeholderIndex, setPlaceholderIndex] = useState(0);
  const [displayedPlaceholder, setDisplayedPlaceholder] = useState('');
  const [isDeleting, setIsDeleting] = useState(false);

  // Typewriter effect
  useEffect(() => {
    const fullText = PLACEHOLDERS[placeholderIndex % PLACEHOLDERS.length];
    let timer;

    if (isDeleting) {
      timer = setTimeout(() => setDisplayedPlaceholder(prev => prev.slice(0, -1)), DELETING_SPEED);
      if (displayedPlaceholder === '') {
        setIsDeleting(false);
        setPlaceholderIndex(prev => prev + 1);
      }
    } else {
      timer = setTimeout(() => setDisplayedPlaceholder(fullText.slice(0, displayedPlaceholder.length + 1)), TYPING_SPEED);
      if (displayedPlaceholder === fullText) {
        clearTimeout(timer);
        timer = setTimeout(() => setIsDeleting(true), PAUSE_DURATION);
      }
    }
    return () => clearTimeout(timer);
  }, [displayedPlaceholder, isDeleting, placeholderIndex]);

  // Show full navbar after scroll
  useEffect(() => {
    if (location.pathname !== '/') {
      setShowFullNav(true);
      return;
    }
    const hero = document.querySelector('.hero-search-pill');
    const threshold = hero ? window.scrollY + hero.getBoundingClientRect().top + hero.getBoundingClientRect().height : 220;
    const onScroll = () => setShowFullNav(window.scrollY > threshold - 80);
    window.addEventListener('scroll', onScroll, { passive: true });
    onScroll();
    return () => window.removeEventListener('scroll', onScroll);
  }, [location.pathname]);

  const doSearch = () => navigate(!query ? '/cars' : `/cars?q=${encodeURIComponent(query)}`);

  return (
    <nav className={`navbar ${showFullNav ? 'expanded' : 'collapsed'}`}>
      <div className="navbar-row navbar-top">
        <div className="navbar-left">
          <Link to="/" className="navbar-brand">
            <img src="/logo192.png" alt="Logo" style={{ width: 40, height: 40 }} />
            <span>Klick Drive</span>
          </Link>
        </div>

        <div className="navbar-search search-pill">
          <div className="pill-content">
            <div className="search-icon">‚ú®</div>
            <input
              className="pill-input navbar-search-input"
              placeholder={displayedPlaceholder || PLACEHOLDERS[0]}
              value={query}
              onChange={e => setQuery(e.target.value)}
              onKeyDown={e => e.key === 'Enter' && doSearch()}
            />
            <button className="pill-go" onClick={doSearch}>AI Search üîç</button>
          </div>
        </div>

        <div className="navbar-contact" style={{ marginLeft: 'auto' }}>
          {user ? (
            <>
              <span>{user.username}</span>
              <button className="navbar-link" onClick={logout}>‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö</button>
            </>
          ) : (
            <Link to="/login" className="navbar-link">‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö üîë</Link>
          )}
        </div>
      </div>

      <div className="navbar-row navbar-bottom">
        <div className="navbar-links">
          <div className="navbar-topmenu">
            {[
              { title: '‡πÄ‡∏ä‡πà‡∏≤‡∏£‡∏ñ', subs: ['‡πÄ‡∏ä‡πà‡∏≤‡∏£‡∏≤‡∏¢‡∏ß‡∏±‡∏ô','‡πÄ‡∏ä‡πà‡∏≤‡∏£‡∏≤‡∏¢‡πÄ‡∏î‡∏∑‡∏≠‡∏ô','‡πÄ‡∏ä‡πà‡∏≤‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Ñ‡∏ô‡∏Ç‡∏±‡∏ö','‡πÄ‡∏ä‡πà‡∏≤‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ó‡πà‡∏≠‡∏á‡πÄ‡∏ó‡∏µ‡πà‡∏¢‡∏ß','‡πÄ‡∏ä‡πà‡∏≤‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ò‡∏∏‡∏£‡∏Å‡∏¥‡∏à','‡πÄ‡∏ä‡πà‡∏≤‡∏£‡∏ñ‡πÑ‡∏ü‡∏ü‡πâ‡∏≤'] },
              { title: '‡πÄ‡∏ä‡πà‡∏≤‡∏°‡∏≠‡πÄ‡∏ï‡∏≠‡∏£‡πå‡πÑ‡∏ä‡∏Ñ‡πå', subs: ['‡∏£‡∏≤‡∏¢‡∏ß‡∏±‡∏ô','‡∏ó‡πà‡∏≠‡∏á‡πÄ‡∏ó‡∏µ‡πà‡∏¢‡∏ß','‡∏™‡∏Å‡∏π‡πä‡∏ï‡πÄ‡∏ï‡∏≠‡∏£‡πå‡πÑ‡∏ü‡∏ü‡πâ‡∏≤','‡∏°‡∏≠‡πÄ‡∏ï‡∏≠‡∏£‡πå‡πÑ‡∏ã‡∏Ñ‡πå‡∏û‡∏£‡∏µ‡πÄ‡∏°‡∏µ‡∏¢‡∏°'] },
              { title: '‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏û‡∏¥‡πÄ‡∏®‡∏©', subs: ['‡∏ï‡∏¥‡∏ß‡∏Ñ‡∏ì‡∏¥‡∏ï','‡∏ï‡∏¥‡∏ß‡∏†‡∏≤‡∏©‡∏≤‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©','‡∏ï‡∏¥‡∏ß‡∏ß‡∏¥‡∏ó‡∏¢‡πå','‡∏ï‡∏¥‡∏ß‡∏™‡∏≠‡∏ö‡πÄ‡∏Ç‡πâ‡∏≤','‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå'] },
              { title: '‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£', subs: ['‡∏á‡∏≤‡∏ô‡∏ä‡πà‡∏≤‡∏á','‡∏£‡∏±‡∏ö‡∏™‡πà‡∏á','‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î','‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏™‡∏ô‡∏≤‡∏°‡∏ö‡∏¥‡∏ô'] },
              { title: '‡∏≠‡∏á‡∏Ñ‡πå‡∏Å‡∏£', subs: ['‡πÄ‡∏ä‡πà‡∏≤‡∏≠‡∏á‡∏Ñ‡πå‡∏Å‡∏£','‡πÅ‡∏û‡πá‡∏Å‡πÄ‡∏Å‡∏à‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô','‡πÄ‡∏ä‡πà‡∏≤‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏≠‡∏µ‡πÄ‡∏ß‡∏ô‡∏ó‡πå'] }
            ].map((m, mi) => (
              <div key={mi} className="menu-item dropdown hover-dropdown">
                <button className="dropdown-toggle">{m.title} ‚ñæ</button>
                <div className="dropdown-menu multi-col">
                  {m.subs.map((s, si) => (
                    <Link key={si} className="dropdown-item" to={`/cars?q=${encodeURIComponent(s)}`}>{s}</Link>
                  ))}
                </div>
              </div>
            ))}
            {user && user.role === 'admin' && (
              <div className="menu-item dropdown hover-dropdown admin-menu">
                <button className="dropdown-toggle">‡πÄ‡∏°‡∏ô‡∏π‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô ‚ñæ</button>
                <div className="dropdown-menu multi-col">
                  <Link className="dropdown-item" to="/admin/cars">‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏£‡∏ñ</Link>
                  <Link className="dropdown-item" to="/admin/bookings">‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á</Link>
                  <Link className="dropdown-item" to="/admin/users">‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô</Link>
                </div>
              </div>
            )}
          </div>
        </div>

        <div className="navbar-quicklinks">
          <button className="btn-outline" onClick={() => navigate('/cars?type=car')}>‡πÄ‡∏ä‡πà‡∏≤‡∏£‡∏ñ‡∏¢‡∏ô‡∏ï‡πå</button>
          <button className="btn-outline" onClick={() => navigate('/cars?type=bike')}>‡πÄ‡∏ä‡πà‡∏≤‡∏°‡∏≠‡πÄ‡∏ï‡∏≠‡∏£‡πå‡πÑ‡∏ã‡∏Ñ‡πå</button>
          <button className="btn-outline" onClick={() => navigate('/cars?type=special')}>‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏û‡∏¥‡πÄ‡∏®‡∏© / ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡πÄ‡∏™‡∏£‡∏¥‡∏°</button>
        </div>
      </div>
    </nav>
  );
};

export default NavbarLogin;
