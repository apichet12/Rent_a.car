// src/components/NavbarLogin.js
import React, { useContext, useState, useEffect } from 'react';
import { Link, useNavigate, useLocation } from 'react-router-dom';
import { AuthContext } from '../contexts/AuthContext';
import './Navbar.css';
import CustomerProfile from '../pages/customer/CustomerProfile';

const TYPING_SPEED = 100;
const DELETING_SPEED = 50;
const PAUSE_DURATION = 1500;

const NavbarLogin = () => {
  const { user } = useContext(AuthContext);
  const [query, setQuery] = useState('');
  const [showFullNav, setShowFullNav] = useState(false);
  
  // ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÉ‡∏´‡∏°‡πà‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°‡πÄ‡∏°‡∏ô‡∏π‡∏°‡∏∑‡∏≠‡∏ñ‡∏∑‡∏≠
  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false); 
  
  const navigate = useNavigate();
  const location = useLocation();

  // ------------------------------
  // Typewriter placeholder effect
  // ------------------------------
  const [placeholderIndex, setPlaceholderIndex] = useState(0);
  const [displayedPlaceholder, setDisplayedPlaceholder] = useState('');
  const [isDeleting, setIsDeleting] = useState(false);

  useEffect(() => {
    const placeholders = [
      '‡∏≠‡∏≠‡∏Å‡πÅ‡∏ö‡∏ö‡πÇ‡∏•‡πÇ‡∏Å‡πâ‡∏£‡πâ‡∏≤‡∏ô‡∏≠‡∏≤‡∏´‡∏≤‡∏£...',
      '‡πÄ‡∏õ‡∏£‡∏µ‡∏¢‡∏ö‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö‡∏£‡∏≤‡∏Ñ‡∏≤‡πÄ‡∏ä‡πà‡∏≤‡∏£‡∏ñ‡∏¢‡∏ô‡∏ï‡πå SUV 7 ‡∏ó‡∏µ‡πà‡∏ô‡∏±‡πà‡∏á...',
      '‡∏´‡∏≤‡∏ß‡∏¥‡∏ò‡∏µ‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏û‡∏¥‡πÄ‡∏®‡∏©‡∏Ñ‡∏ì‡∏¥‡∏ï‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå ‡∏°.‡∏õ‡∏•‡∏≤‡∏¢...',
      '‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡πà‡∏≤‡∏°‡∏≠‡πÄ‡∏ï‡∏≠‡∏£‡πå‡πÑ‡∏ã‡∏Ñ‡πå...'
    ];
    const fullText = placeholders[placeholderIndex % placeholders.length];
    let timer;

    if (isDeleting) {
      timer = setTimeout(() => setDisplayedPlaceholder(prev => prev.slice(0, -1)), DELETING_SPEED);
      if (displayedPlaceholder === '') {
        setIsDeleting(false);
        setPlaceholderIndex(prev => prev + 1);
      }
    } else {
      timer = setTimeout(() => setDisplayedPlaceholder(fullText.slice(0, displayedPlaceholder.length + 1)), TYPING_SPEED);
      if (displayedPlaceholder === fullText) {
        clearTimeout(timer);
        timer = setTimeout(() => setIsDeleting(true), PAUSE_DURATION);
      }
    }
    return () => clearTimeout(timer);
  }, [displayedPlaceholder, isDeleting, placeholderIndex]);

  // ------------------------------
  // ‡πÅ‡∏™‡∏î‡∏á navbar ‡πÄ‡∏ï‡πá‡∏°‡πÄ‡∏°‡∏∑‡πà‡∏≠ scroll ‡∏´‡∏£‡∏∑‡∏≠‡∏≠‡∏¢‡∏π‡πà‡∏´‡∏ô‡πâ‡∏≤‡∏≠‡∏∑‡πà‡∏ô
  // ------------------------------
  useEffect(() => {
    if (location.pathname !== '/') {
      setShowFullNav(true);
      return;
    }
    const hero = document.querySelector('.hero-search-pill');
    const threshold = hero
      ? window.scrollY + hero.getBoundingClientRect().top + hero.getBoundingClientRect().height
      : 220;
    const onScroll = () => setShowFullNav(window.scrollY > threshold - 80);
    window.addEventListener('scroll', onScroll, { passive: true });
    onScroll();
    return () => window.removeEventListener('scroll', onScroll);
  }, [location.pathname]);

  // ------------------------------
  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤
  // ------------------------------
  const doSearch = () => {
    navigate(!query ? '/cars' : `/cars?q=${encodeURIComponent(query)}`);
    // ‡∏õ‡∏¥‡∏î‡πÄ‡∏°‡∏ô‡∏π‡∏°‡∏∑‡∏≠‡∏ñ‡∏∑‡∏≠‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤
    setIsMobileMenuOpen(false); 
  };
  
  // ------------------------------
  // Handlers for Mobile Menu
  // ------------------------------
  const toggleMobileMenu = () => setIsMobileMenuOpen(prev => !prev);
  const closeMobileMenu = () => setIsMobileMenuOpen(false);


  // ------------------------------
  // ‡πÄ‡∏°‡∏ô‡∏π‡∏´‡∏•‡∏±‡∏Å‡∏Ç‡∏≠‡∏á navbar
  // ------------------------------
  const MENU_ITEMS = [
    { title: '‡πÄ‡∏ä‡πà‡∏≤‡∏£‡∏ñ', subs: ['‡πÄ‡∏ä‡πà‡∏≤‡∏£‡∏≤‡∏¢‡∏ß‡∏±‡∏ô', '‡πÄ‡∏ä‡πà‡∏≤‡∏£‡∏≤‡∏¢‡πÄ‡∏î‡∏∑‡∏≠‡∏ô', '‡πÄ‡∏ä‡πà‡∏≤‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Ñ‡∏ô‡∏Ç‡∏±‡∏ö', '‡∏ó‡πà‡∏≠‡∏á‡πÄ‡∏ó‡∏µ‡πà‡∏¢‡∏ß', '‡∏ò‡∏∏‡∏£‡∏Å‡∏¥‡∏à', '‡∏£‡∏ñ‡πÑ‡∏ü‡∏ü‡πâ‡∏≤'] },
    { title: '‡πÄ‡∏ä‡πà‡∏≤‡∏°‡∏≠‡πÄ‡∏ï‡∏≠‡∏£‡πå‡πÑ‡∏ã‡∏Ñ‡πå', subs: ['‡∏£‡∏≤‡∏¢‡∏ß‡∏±‡∏ô', '‡∏ó‡πà‡∏≠‡∏á‡πÄ‡∏ó‡∏µ‡πà‡∏¢‡∏ß', '‡∏™‡∏Å‡∏π‡πä‡∏ï‡πÄ‡∏ï‡∏≠‡∏£‡πå‡πÑ‡∏ü‡∏ü‡πâ‡∏≤', '‡∏û‡∏£‡∏µ‡πÄ‡∏°‡∏µ‡∏¢‡∏°'] },
    { title: '‡∏ï‡∏¥‡∏ß‡πÄ‡∏£‡∏µ‡∏¢‡∏ô', subs: ['‡∏Ñ‡∏ì‡∏¥‡∏ï‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå', '‡∏†‡∏≤‡∏©‡∏≤‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©', '‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå', '‡∏ï‡∏¥‡∏ß‡∏™‡∏≠‡∏ö‡πÄ‡∏Ç‡πâ‡∏≤', '‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå'] },
    { title: '‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£', subs: ['‡∏ä‡πà‡∏≤‡∏á‡∏ã‡πà‡∏≠‡∏°', '‡∏à‡∏±‡∏î‡∏™‡πà‡∏á', '‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î', '‡∏£‡∏±‡∏ö‡∏™‡πà‡∏á‡∏™‡∏ô‡∏≤‡∏°‡∏ö‡∏¥‡∏ô'] },
    { title: '‡∏≠‡∏á‡∏Ñ‡πå‡∏Å‡∏£', subs: ['‡πÄ‡∏ä‡πà‡∏≤‡∏≠‡∏á‡∏Ñ‡πå‡∏Å‡∏£', '‡πÅ‡∏û‡πá‡∏Å‡πÄ‡∏Å‡∏à‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô', '‡πÄ‡∏ä‡πà‡∏≤‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏≠‡∏µ‡πÄ‡∏ß‡∏ô‡∏ó‡πå'] },
  ];

  // ------------------------------
  // Render Navbar
  // ------------------------------
  return (
    <>
      <nav className={`navbar ${showFullNav ? 'expanded' : 'collapsed'}`}>
        {/* ‡πÅ‡∏ñ‡∏ß‡∏ö‡∏ô */}
        <div className="navbar-row navbar-top">
          <div className="navbar-left">
            <Link to="/" className="navbar-brand">
              {/* ‡πÉ‡∏ä‡πâ SVG ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÇ‡∏•‡πÇ‡∏Å‡πâ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏î‡∏π‡∏Ñ‡∏°‡∏ä‡∏±‡∏î‡πÅ‡∏•‡∏∞‡∏¢‡∏∑‡∏î‡∏´‡∏¢‡∏∏‡πà‡∏ô */}
              <svg width="40" height="40" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path d="M12 2C6.477 2 2 6.477 2 12s4.477 10 10 10 10-4.477 10-10S17.523 2 12 2z" fill="#007bff" opacity="0.15"/>
                <path d="M12 4a8 8 0 100 16 8 8 0 000-16zM11 8v4h4" stroke="#007bff" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
                <path d="M16 16.5c-1.5-1.5-3.5-2-6-2s-4.5.5-6 2" stroke="#007bff" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
              </svg>
              <span>Klick Drive</span>
            </Link>
          </div>

          {/* ‡∏ä‡πà‡∏≠‡∏á‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ */}
          <div className="navbar-search search-pill" style={{ flex: 1, margin: '0 20px' }}>
            <div className="pill-content">
              <div className="search-icon">‚ú®</div>
              <input
                className="pill-input navbar-search-input"
                placeholder={displayedPlaceholder || '‡∏≠‡∏≠‡∏Å‡πÅ‡∏ö‡∏ö‡πÇ‡∏•‡πÇ‡∏Å‡πâ‡∏£‡πâ‡∏≤‡∏ô‡∏≠‡∏≤‡∏´‡∏≤‡∏£...'}
                value={query}
                onChange={e => setQuery(e.target.value)}
                onKeyDown={e => e.key === 'Enter' && doSearch()}
              />
              <button className="pill-go" onClick={doSearch}>‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ üîç</button>
            </div>
          </div>

          {/* ‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ / ‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö / ‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏°‡∏ô‡∏π‡∏°‡∏∑‡∏≠‡∏ñ‡∏∑‡∏≠ */}
          <div className="navbar-contact" style={{ marginLeft: 'auto', display: 'flex', alignItems: 'center', gap: 10 }}>
            {/* ‡πÅ‡∏™‡∏î‡∏á‡∏õ‡∏∏‡πà‡∏° Login/Profile ‡∏ö‡∏ô‡πÄ‡∏î‡∏™‡∏Å‡πå‡∏ó‡πá‡∏≠‡∏õ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô (‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠‡∏Å‡∏ß‡πâ‡∏≤‡∏á‡∏Å‡∏ß‡πà‡∏≤ 1024px) */}
            <div 
              style={{ display: window.innerWidth > 1024 ? 'flex' : 'none' }}
              className="desktop-auth-buttons" 
            >
              {user ? <CustomerProfile /> : <Link to="/login" className="navbar-link">‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö üîê</Link>}
            </div>

            {/* ‡∏õ‡∏∏‡πà‡∏°‡πÅ‡∏Æ‡∏°‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÄ‡∏Å‡∏≠‡∏£‡πå (‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ö‡∏ô‡∏°‡∏∑‡∏≠‡∏ñ‡∏∑‡∏≠/‡πÅ‡∏ó‡πá‡∏ö‡πÄ‡∏•‡πá‡∏ï) */}
            <button
              className="navbar-hamburger"
              onClick={toggleMobileMenu}
              aria-label="Toggle navigation menu"
              // ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ö‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠‡πÄ‡∏•‡πá‡∏Å (‡∏ï‡∏≤‡∏° CSS media query ‡∏ó‡∏µ‡πà‡∏Ñ‡∏≤‡∏î‡πÑ‡∏ß‡πâ)
              style={{ display: window.innerWidth <= 1024 ? 'inline-flex' : 'none' }} 
            >
              {isMobileMenuOpen ? '‚úï' : '‚ò∞'}
            </button>

          </div>
        </div>

        {/* ‡πÅ‡∏ñ‡∏ß‡∏•‡πà‡∏≤‡∏á (‡∏ã‡πà‡∏≠‡∏ô‡∏î‡πâ‡∏ß‡∏¢ CSS ‡∏ö‡∏ô‡∏°‡∏∑‡∏≠‡∏ñ‡∏∑‡∏≠) */}
        <div className={`navbar-row navbar-bottom ${user?.role === 'admin' ? 'admin-row' : ''}`}>
          <div className="navbar-links">
            <div className="navbar-topmenu">
              {MENU_ITEMS.map((m, mi) => (
                <div key={mi} className="menu-item dropdown hover-dropdown">
                  <button className="dropdown-toggle">{m.title} ‚ñæ</button>
                  <div className="dropdown-menu multi-col">
                    {m.subs.map((s, si) => (
                      <Link key={si} className="dropdown-item" to={`/cars?q=${encodeURIComponent(s)}`}>
                        {s}
                      </Link>
                    ))}
                  </div>
                </div>
              ))}

              {user && user.role === 'admin' && (
                <div className="menu-item dropdown hover-dropdown admin-menu">
                  <button className="dropdown-toggle">‡πÄ‡∏°‡∏ô‡∏π‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô ‚ñæ</button>
                  <div className="dropdown-menu multi-col">
                    <Link className="dropdown-item" to="/admin/cars">üöó ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏£‡∏ñ</Link>
                    <Link className="dropdown-item" to="/admin/bookings">üìÖ ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á</Link>
                    <Link className="dropdown-item" to="/admin/users">üë§ ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ</Link>
                  </div>
                </div>
              )}
            </div>
          </div>

          {/* ‡∏õ‡∏∏‡πà‡∏°‡∏•‡∏±‡∏î */}
          <div className="navbar-quicklinks">
            <button className="btn-outline" onClick={() => navigate('/cars?type=car')}>‡πÄ‡∏ä‡πà‡∏≤‡∏£‡∏ñ</button>
            <button className="btn-outline" onClick={() => navigate('/cars?type=bike')}>‡πÄ‡∏ä‡πà‡∏≤‡∏°‡∏≠‡πÄ‡∏ï‡∏≠‡∏£‡πå‡πÑ‡∏ã‡∏Ñ‡πå</button>
            <button className="btn-outline" onClick={() => navigate('/cars?type=special')}>‡∏ï‡∏¥‡∏ß / ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£</button>
          </div>
        </div>
      </nav>

      {/* ------------------------------ */}
      {/* Mobile Menu Drawer Structure (Off-Canvas) */}
      {/* ------------------------------ */}
      <div 
          className={`mobile-menu ${isMobileMenuOpen ? 'open' : ''}`} 
          onClick={closeMobileMenu} // Close when clicking backdrop
      >
        <div 
            className="mobile-menu-inner" 
            onClick={e => e.stopPropagation()} // Prevent closing when clicking inside the drawer
        >
          {/* Top Header of Drawer */}
          <div className="mobile-menu-top">
            <Link to="/" className="navbar-brand" onClick={closeMobileMenu}>
              <img src="/logo192.png" alt="Logo" style={{ width: 32, height: 32 }} />
              <span>Klick Drive</span>
            </Link>
            <button 
              className="navbar-hamburger" 
              onClick={closeMobileMenu} 
              style={{ marginLeft: 'auto', fontSize: '1.5rem', fontWeight: 600 }}
            >
              ‚úï
            </button>
          </div>

          {/* User Auth/Profile in Drawer */}
          <div className="mobile-menu-top" style={{ borderBottom: 'none', padding: '12px 20px', backgroundColor: '#f9f9f9' }}>
            {user ? (
              // ‡πÅ‡∏™‡∏î‡∏á‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÅ‡∏ö‡∏ö‡∏á‡πà‡∏≤‡∏¢‡πÉ‡∏ô‡πÄ‡∏°‡∏ô‡∏π
              <div className="flex items-center gap-3">
                <div className="w-8 h-8 rounded-full bg-blue-200 flex items-center justify-center text-blue-800 font-bold">
                  {user.displayName ? user.displayName[0] : 'U'}
                </div>
                <span>‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö, {user.displayName || '‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ'}</span>
                <Link to="/profile" className="navbar-link text-sm" onClick={closeMobileMenu}>
                  ‡∏î‡∏π‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå
                </Link>
              </div>
            ) : (
              // ‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö
              <Link to="/login" className="btn-outline" onClick={closeMobileMenu} style={{ borderColor: '#007bff', color: '#007bff', padding: '8px 16px', borderRadius: '8px' }}>
                ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö üîê
              </Link>
            )}
          </div>
          
          {/* Main Links */}
          <div className="mobile-menu-links">
            {MENU_ITEMS.map((m, mi) => (
              <div key={mi} className="mobile-menu-section">
                <div className="mobile-menu-section-title">{m.title}</div>
                <div className="mobile-menu-section-items">
                  {m.subs.map((s, si) => (
                    <Link 
                      key={si} 
                      className="mobile-menu-link" 
                      to={`/cars?q=${encodeURIComponent(s)}`}
                      onClick={closeMobileMenu}
                    >
                      {s}
                    </Link>
                  ))}
                </div>
              </div>
            ))}
            
            {user && user.role === 'admin' && (
              <div className="mobile-menu-section admin-menu">
                <div className="mobile-menu-section-title">‡πÄ‡∏°‡∏ô‡∏π‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô</div>
                <div className="mobile-menu-section-items">
                  <Link className="mobile-menu-link" to="/admin/cars" onClick={closeMobileMenu}>üöó ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏£‡∏ñ</Link>
                  <Link className="mobile-menu-link" to="/admin/bookings" onClick={closeMobileMenu}>üìÖ ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á</Link>
                  <Link className="mobile-menu-link" to="/admin/users" onClick={closeMobileMenu}>üë§ ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ</Link>
                </div>
              </div>
            )}
          </div>

          {/* Quick Links */}
          <div className="mobile-quicklinks">
            <button className="btn-outline" onClick={() => { navigate('/cars?type=car'); closeMobileMenu(); }}>‡πÄ‡∏ä‡πà‡∏≤‡∏£‡∏ñ</button>
            <button className="btn-outline" onClick={() => { navigate('/cars?type=bike'); closeMobileMenu(); }}>‡πÄ‡∏ä‡πà‡∏≤‡∏°‡∏≠‡πÄ‡∏ï‡∏≠‡∏£‡πå‡πÑ‡∏ã‡∏Ñ‡πå</button>
            <button className="btn-outline" onClick={() => { navigate('/cars?type=special'); closeMobileMenu(); }}>‡∏ï‡∏¥‡∏ß / ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£</button>
          </div>

        </div>
      </div>
    </>
  );
};

export default NavbarLogin;
